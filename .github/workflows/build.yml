name: "Build and populate cache"
on:
  pull_request:
  push:
    branches:
      - main
      - master
  schedule:
    # rebuild everyday at 2:51
    # TIP: Choose a random time here so not all repositories are build at once:
    # https://www.random.org/clock-times/?num=1&earliest=01%3A00&latest=08%3A00&interval=5&format=html&rnd=new
    - cron:  '51 2 * * *'
  workflow_dispatch:
jobs:
  tests:
    strategy:
      matrix:

        system:
          - macos-latest
          - ubuntu-latest
        cachixName:
          - auscyber
        nixPath:
          - nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixpkgs-unstable.tar.gz
          - nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixos-unstable.tar.gz
    runs-on:  ${{ matrix.system }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install nix
      uses: DeterminateSystems/nix-installer-action@main
      with:
        # use lix main
        source-url: https://install.lix.systems/lix
#        nix-package-url: https://git.lix.systems/lix-project/lix/archive/main.tar.gz
        extra-conf: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - name: Show nixpkgs version
      run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
    - name: Setup cachix
      uses: cachix/cachix-action@v15
      # Don't replace <YOUR_CACHIX_NAME> here!
      if: ${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}
      with:
        name: ${{ matrix.cachixName }}
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Build nix packages
      run: nix shell -f '<nixpkgs>' nix-fast-build -c nix-fast-build
    - name: update README
      run: nix shell -f '<nixpkgs>' nur-update-readme -c nur-update-readme
    - name: Commit updated README
      run: |
        git config user.name "github-actions"
        git config user.email "
        git commit -am "Update README"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


